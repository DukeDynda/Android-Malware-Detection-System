package com.example.kevinwu.project;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.os.Environment;
import android.os.Handler;
import android.os.Looper;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class SecondActivity extends Activity {


    private TextView Scan;
    private TextView txtProgress;
    private ProgressBar progressBar;
    private int pStatus = 0;
    private int malwareCount = 0;
    private Handler handler = new Handler();

    //Number of innocent data
    private static int NUM_INNO_POINTS = 0;
    //Number of malicious data
    private static int NUM_MALI_POINTS = 0;
    //dimension
    private static int DIMENSION = 135;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);
        Scan = (TextView) findViewById(R.id.textView1);
        txtProgress = (TextView) findViewById(R.id.txtProgress);
        progressBar = (ProgressBar) findViewById(R.id.progressBar);

        new Thread( new Runnable() {
                @Override
            public void run()
                {
                    //retrieve all applications and their permissions
                    Bundle b=new Bundle();
                    final Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
                    mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
                    final List pkgAppsList = getPackageManager().queryIntentActivities(mainIntent, 0);

                    String [] possiList = new String [pkgAppsList.size()];
                    //array if the permissions flag
                    int [] perFlag = new int[135];

                    BufferedReader reader = null;

                    try {
                        reader = new BufferedReader(new InputStreamReader(getAssets().open("malware.txt"),"UTF-8"));
                        String line;
                        while ((line = reader.readLine()) != null) {
                            if(line.length() > 0) {
                                StringBuilder text = new StringBuilder();
                                text.append(line);
                                Log.d("Test:", "" + text);
                                text.append('\n');
                            }
                        }
                    }
                    catch (IOException e) {
                        e.printStackTrace();
                    }
                    finally{
                        if(reader != null){
                            try {
                                reader.close();
                            } catch (IOException e) {

                            }
                        }
                    }
                    //add in the machine learning part::
                    //--------------------------------------------------------------------------------------------------------------
                    //read the innocent permission file
                    ArrayList<Point> innocent = new  ArrayList<Point>();
                    try
                    {
                        reader = new BufferedReader(
                                new InputStreamReader(getAssets().open("Innocentapp.txt")));
                        // do reading, usually loop until end of file reading
                        String mLine;
                        //build observations
                        while ((mLine = reader.readLine()) != null)
                        {
                            //read one line of permission
                            ArrayList<Double> oneLine = new ArrayList<Double>();
                            for(int a = 0; a < mLine.length(); a++)
                            {
                                oneLine.add((double)Character.getNumericValue(mLine.charAt(a)));
                            }
                            Point oneData = new Point(oneLine);
                            //add point to observations
                            innocent.add(oneData);
                            NUM_INNO_POINTS++;
                        }
                    } catch (IOException e)
                    {
                        e.printStackTrace();
                    }

                    //warning: hard code remove the first element in the first element of the observation
                    innocent.get(0).data.remove(0);
                    innocent.get(0).dimension -=1;
                    //build centroid
                    ArrayList<Point> centroid = new ArrayList<Point>();
                    for(int a =0; a <DIMENSION; a++)
                    {
                        ArrayList<Double> centroid_location = new ArrayList<Double>(DIMENSION);
                        //initialize
                        for(int x = 0; x < DIMENSION; x++)
                        {
                            centroid_location.add((double)0);
                        }
                        centroid_location.set(a, (double)1);
                        Point pt = new Point(centroid_location);
                        centroid.add(pt);
                    }
                    KMeans innocent_kmeans = new KMeans(innocent, centroid);
                    System.out.println(innocent_kmeans.calculate(NUM_INNO_POINTS));
                    //--------------------------------------------------------------------------------------------------------------
                    //read the malicious permission file
                    ArrayList<Point> malicious = new  ArrayList<Point>();
                    try
                    {
                        reader = new BufferedReader(
                                new InputStreamReader(getAssets().open("malware.txt")));
                        // do reading, usually loop until end of file reading
                        String mLine;
                        //build observations
                        while ((mLine = reader.readLine()) != null)
                        {
                            //read one line of permission
                            ArrayList<Double> oneLine = new ArrayList<Double>();
                            for(int a = 0; a < mLine.length(); a++)
                            {
                                oneLine.add((double)Character.getNumericValue(mLine.charAt(a)));
                            }
                            Point oneData = new Point(oneLine);
                            //add point to observations
                            malicious.add(oneData);
                            NUM_MALI_POINTS++;
                        }
                    } catch (IOException e)
                    {
                        e.printStackTrace();
                    }

                    //warning: hard code remove the first element in the first element of the observation
                    KMeans malicious_kmeans = new KMeans(malicious, centroid);
                    System.out.println(malicious_kmeans.calculate(NUM_MALI_POINTS));
                    //--------------------------------------------------------------------------------------------------------------
                    //Make prediction
                    NaiveBayes prediction = new NaiveBayes(innocent_kmeans.clusters, malicious_kmeans.clusters, NUM_INNO_POINTS, NUM_MALI_POINTS);
                    //runs through each app
                    for(int i = 0 ;i < pkgAppsList.size();i++){
                        //reset the array
                        for(int x = 0; x < 134; x++){
                            perFlag[x] = 0;
                        }

                        Object obj = pkgAppsList.get(i);
                        ResolveInfo resolveInfo = (ResolveInfo) obj;
                        PackageInfo packageInfo = null;
                        try {
                            packageInfo = getPackageManager().getPackageInfo(resolveInfo.activityInfo.packageName, PackageManager.GET_PERMISSIONS);
                        } catch (PackageManager.NameNotFoundException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }

                        Log.d("", "");
                        Log.d("app: ", pkgAppsList.get(i).toString());
                        String[] permission = packageInfo.requestedPermissions;
                        if(permission == null){
                            Log.d("NO permission", "---------");
                        }else {
                            for(int j = 0; j < permission.length; j++) {
                                if(permission[j].compareTo("android.permission.ACCESS_CHECKIN_PROPERTIES") == 0){
                                    perFlag[0] = 1;
                                }else if(permission[j].compareTo("android.permission.ACCESS_COARSE_LOCATION") == 0){
                                    perFlag[1] = 1;
                                }else if(permission[j].compareTo("android.permission.ACCESS_FINE_LOCATION") == 0){
                                    perFlag[2] = 1;
                                }else if(permission[j].compareTo("android.permission.ACCESS_LOCATION_EXTRA_COMMANDS") == 0){
                                    perFlag[3] = 1;
                                }else if(permission[j].compareTo("android.permission.ACCESS_NETWORK_STATE") == 0){
                                    perFlag[4] = 1;
                                }else if(permission[j].compareTo("android.permission.ACCESS_NOTIFICATION_POLICY") == 0){
                                    perFlag[5] = 1;
                                }else if(permission[j].compareTo("android.permission.ACCESS_WIFI_STATE") == 0){
                                    perFlag[6] = 1;
                                }else if(permission[j].compareTo("android.permission.ACCOUNT_MANAGER") == 0){
                                    perFlag[7] = 1;
                                }else if(permission[j].compareTo("android.permission.ADD_VOICEMAIL") == 0){
                                    perFlag[8] = 1;
                                }else if(permission[j].compareTo("android.permission.BATTERY_STATS") == 0){
                                    perFlag[9] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_ACCESSIBILITY_SERVICE") == 0){
                                    perFlag[10] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_APPWIDGET") == 0){
                                    perFlag[11] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_CARRIER_MESSAGING_SERVICE") == 0){
                                    perFlag[12] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_CARRIER_SERVICES") == 0){
                                    perFlag[13] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_CHOOSER_TARGET_SERVICE") == 0){
                                    perFlag[14] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_DEVICE_ADMIN") == 0){
                                    perFlag[15] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_DREAM_SERVICE") == 0){
                                    perFlag[16] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_INCALL_SERVICE") == 0){
                                    perFlag[17] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_INPUT_METHOD") == 0){
                                    perFlag[18] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_MIDI_DEVICE_SERVICE") == 0){
                                    perFlag[19] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_NFC_SERVICE") == 0){
                                    perFlag[20] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_NOTIFICATION_LISTENER_SERVICE") == 0){
                                    perFlag[21] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_PRINT_SERVICE") == 0){
                                    perFlag[22] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_REMOTEVIEWS") == 0){
                                    perFlag[23] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_TELECOM_CONNECTION_SERVICE") == 0){
                                    perFlag[24] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_TEXT_SERVICE") == 0){
                                    perFlag[25] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_TV_INPUT") == 0){
                                    perFlag[26] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_VOICE_INTERACTION") == 0){
                                    perFlag[27] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_VPN_SERVICE") == 0){
                                    perFlag[28] = 1;
                                }else if(permission[j].compareTo("android.permission.BIND_WALLPAPER") == 0){
                                    perFlag[29] = 1;
                                }else if(permission[j].compareTo("android.permission.BLUETOOTH") == 0){
                                    perFlag[30] = 1;
                                }else if(permission[j].compareTo("android.permission.BLUETOOTH_ADMIN") == 0){
                                    perFlag[31] = 1;
                                }else if(permission[j].compareTo("android.permission.BLUETOOTH_PRIVILEGED") == 0){
                                    perFlag[32] = 1;
                                }else if(permission[j].compareTo("android.permission.BODY_SENSORS") == 0){
                                    perFlag[33] = 1;
                                }else if(permission[j].compareTo("android.permission.BROADCAST_PACKAGE_REMOVED") == 0){
                                    perFlag[34] = 1;
                                }else if(permission[j].compareTo("android.permission.BROADCAST_SMS") == 0){
                                    perFlag[35] = 1;
                                }else if(permission[j].compareTo("android.permission.BROADCAST_STICKY") == 0){
                                    perFlag[36] = 1;
                                }else if(permission[j].compareTo("android.permission.BROADCAST_WAP_PUSH") == 0){
                                    perFlag[37] = 1;
                                }else if(permission[j].compareTo("android.permission.CALL_PHONE") == 0){
                                    perFlag[38] = 1;
                                }else if(permission[j].compareTo("android.permission.CALL_PRIVILEGED") == 0){
                                    perFlag[39] = 1;
                                }else if(permission[j].compareTo("android.permission.CAMERA") == 0){
                                    perFlag[40] = 1;
                                }else if(permission[j].compareTo("android.permission.CAPTURE_AUDIO_OUTPUT") == 0){
                                    perFlag[41] = 1;
                                }else if(permission[j].compareTo("android.permission.CAPTURE_SECURE_VIDEO_OUTPUT") == 0){
                                    perFlag[42] = 1;
                                }else if(permission[j].compareTo("android.permission.CAPTURE_VIDEO_OUTPUT") == 0){
                                    perFlag[43] = 1;
                                }else if(permission[j].compareTo("android.permission.CHANGE_COMPONENT_ENABLED_STATE") == 0){
                                    perFlag[44] = 1;
                                }else if(permission[j].compareTo("android.permission.CHANGE_CONFIGURATION") == 0){
                                    perFlag[45] = 1;
                                }else if(permission[j].compareTo("android.permission.CHANGE_NETWORK_STATE") == 0){
                                    perFlag[46] = 1;
                                }else if(permission[j].compareTo("android.permission.CHANGE_WIFI_MULTICAST_STATE") == 0){
                                    perFlag[47] = 1;
                                }else if(permission[j].compareTo("android.permission.CHANGE_WIFI_STATE") == 0){
                                    perFlag[48] = 1;
                                }else if(permission[j].compareTo("android.permission.CLEAR_APP_CACHE") == 0){
                                    perFlag[49] = 1;
                                }else if(permission[j].compareTo("android.permission.CONTROL_LOCATION_UPDATES") == 0){
                                    perFlag[50] = 1;
                                }else if(permission[j].compareTo("android.permission.DELETE_CACHE_FILES") == 0){
                                    perFlag[51] = 1;
                                }else if(permission[j].compareTo("android.permission.DELETE_PACKAGES") == 0){
                                    perFlag[52] = 1;
                                }else if(permission[j].compareTo("android.permission.DIAGNOSTIC") == 0){
                                    perFlag[53] = 1;
                                }else if(permission[j].compareTo("android.permission.DISABLE_KEYGUARD") == 0){
                                    perFlag[54] = 1;
                                }else if(permission[j].compareTo("android.permission.DUMP") == 0){
                                    perFlag[55] = 1;
                                }else if(permission[j].compareTo("android.permission.EXPAND_STATUS_BAR") == 0){
                                    perFlag[56] = 1;
                                }else if(permission[j].compareTo("android.permission.FACTORY_TEST") == 0){
                                    perFlag[57] = 1;
                                }else if(permission[j].compareTo("android.permission.FLASHLIGHT") == 0){
                                    perFlag[58] = 1;
                                }else if(permission[j].compareTo("android.permission.GET_ACCOUNTS") == 0){
                                    perFlag[59] = 1;
                                }else if(permission[j].compareTo("android.permission.GET_ACCOUNTS_PRIVILEGED") == 0){
                                    perFlag[60] = 1;
                                }else if(permission[j].compareTo("android.permission.GET_PACKAGE_SIZE") == 0){
                                    perFlag[61] = 1;
                                }else if(permission[j].compareTo("android.permission.GET_TASKS") == 0){
                                    perFlag[62] = 1;
                                }else if(permission[j].compareTo("android.permission.GLOBAL_SEARCH") == 0){
                                    perFlag[63] = 1;
                                }else if(permission[j].compareTo("android.permission.INSTALL_LOCATION_PROVIDER") == 0){
                                    perFlag[64] = 1;
                                }else if(permission[j].compareTo("android.permission.INSTALL_PACKAGES") == 0){
                                    perFlag[65] = 1;
                                }else if(permission[j].compareTo("android.permission.INSTALL_SHORTCUT") == 0){
                                    perFlag[66] = 1;
                                }else if(permission[j].compareTo("android.permission.INTERNET") == 0){
                                    perFlag[67] = 1;
                                }else if(permission[j].compareTo("android.permission.KILL_BACKGROUND_PROCESSES") == 0){
                                    perFlag[68] = 1;
                                }else if(permission[j].compareTo("android.permission.LOCATION_HARDWARE") == 0){
                                    perFlag[69] = 1;
                                }else if(permission[j].compareTo("android.permission.MANAGE_DOCUMENTS") == 0){
                                    perFlag[70] = 1;
                                }else if(permission[j].compareTo("android.permission.MASTER_CLEAR") == 0){
                                    perFlag[71] = 1;
                                }else if(permission[j].compareTo("android.permission.MEDIA_CONTENT_CONTROL") == 0){
                                    perFlag[72] = 1;
                                }else if(permission[j].compareTo("android.permission.MODIFY_AUDIO_SETTINGS") == 0){
                                    perFlag[73] = 1;
                                }else if(permission[j].compareTo("android.permission.MODIFY_PHONE_STATE") == 0){
                                    perFlag[74] = 1;
                                }else if(permission[j].compareTo("android.permission.MOUNT_FORMAT_FILESYSTEMS") == 0){
                                    perFlag[75] = 1;
                                }else if(permission[j].compareTo("android.permission.MOUNT_UNMOUNT_FILESYSTEMS") == 0){
                                    perFlag[76] = 1;
                                }else if(permission[j].compareTo("android.permission.NFC") == 0){
                                    perFlag[77] = 1;
                                }else if(permission[j].compareTo("android.permission.PACKAGE_USAGE_STATS") == 0){
                                    perFlag[78] = 1;
                                }else if(permission[j].compareTo("android.permission.PERSISTENT_ACTIVITY") == 0){
                                    perFlag[79] = 1;
                                }else if(permission[j].compareTo("android.permission.PROCESS_OUTGOING_CALLS") == 0){
                                    perFlag[80] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_CALENDAR") == 0){
                                    perFlag[81] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_CALL_LOG") == 0){
                                    perFlag[82] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_CONTACTS") == 0){
                                    perFlag[83] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_EXTERNAL_STORAGE") == 0){
                                    perFlag[84] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_FRAME_BUFFER") == 0){
                                    perFlag[85] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_INPUT_STATE") == 0){
                                    perFlag[86] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_LOGS") == 0){
                                    perFlag[87] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_PHONE_STATE") == 0){
                                    perFlag[88] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_SMS") == 0){
                                    perFlag[89] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_SYNC_SETTINGS") == 0){
                                    perFlag[90] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_SYNC_STATS") == 0){
                                    perFlag[91] = 1;
                                }else if(permission[j].compareTo("android.permission.READ_VOICEMAIL") == 0){
                                    perFlag[92] = 1;
                                }else if(permission[j].compareTo("android.permission.REBOOT") == 0){
                                    perFlag[93] = 1;
                                }else if(permission[j].compareTo("android.permission.RECEIVE_BOOT_COMPLETED") == 0){
                                    perFlag[94] = 1;
                                }else if(permission[j].compareTo("android.permission.RECEIVE_MMS") == 0){
                                    perFlag[95] = 1;
                                }else if(permission[j].compareTo("android.permission.RECEIVE_SMS") == 0){
                                    perFlag[96] = 1;
                                }else if(permission[j].compareTo("android.permission.RECEIVE_WAP_PUSH") == 0){
                                    perFlag[97] = 1;
                                }else if(permission[j].compareTo("android.permission.RECORD_AUDIO") == 0){
                                    perFlag[98] = 1;
                                }else if(permission[j].compareTo("android.permission.REORDER_TASKS") == 0){
                                    perFlag[99] = 1;
                                }else if(permission[j].compareTo("android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS") == 0){
                                    perFlag[100] = 1;
                                }else if(permission[j].compareTo("android.permission.REQUEST_INSTALL_PACKAGES") == 0){
                                    perFlag[101] = 1;
                                }else if(permission[j].compareTo("android.permission.RESTART_PACKAGES") == 0){
                                    perFlag[102] = 1;
                                }else if(permission[j].compareTo("android.permission.SEND_RESPOND_VIA_MESSAGE") == 0){
                                    perFlag[103] = 1;
                                }else if(permission[j].compareTo("android.permission.SEND_SMS") == 0){
                                    perFlag[104] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_ALARM") == 0){
                                    perFlag[105] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_ALWAYS_FINISH") == 0){
                                    perFlag[106] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_ANIMATION_SCALE") == 0){
                                    perFlag[107] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_DEBUG_APP") == 0){
                                    perFlag[108] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_PREFERRED_APPLICATIONS") == 0){
                                    perFlag[109] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_PROCESS_LIMIT") == 0){
                                    perFlag[110] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_TIME") == 0){
                                    perFlag[111] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_TIME_ZONE") == 0){
                                    perFlag[112] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_WALLPAPER") == 0){
                                    perFlag[113] = 1;
                                }else if(permission[j].compareTo("android.permission.SET_WALLPAPER_HINTS") == 0){
                                    perFlag[114] = 1;
                                }else if(permission[j].compareTo("android.permission.SIGNAL_PERSISTENT_PROCESSES") == 0){
                                    perFlag[115] = 1;
                                }else if(permission[j].compareTo("android.permission.STATUS_BAR") == 0){
                                    perFlag[116] = 1;
                                }else if(permission[j].compareTo("android.permission.SYSTEM_ALERT_WINDOW") == 0){
                                    perFlag[117] = 1;
                                }else if(permission[j].compareTo("android.permission.TRANSMIT_IR") == 0){
                                    perFlag[118] = 1;
                                }else if(permission[j].compareTo("android.permission.UNINSTALL_SHORTCUT") == 0){
                                    perFlag[119] = 1;
                                }else if(permission[j].compareTo("android.permission.UPDATE_DEVICE_STATS") == 0){
                                    perFlag[120] = 1;
                                }else if(permission[j].compareTo("android.permission.USE_FINGERPRINT") == 0){
                                    perFlag[121] = 1;
                                }else if(permission[j].compareTo("android.permission.USE_SIP") == 0){
                                    perFlag[122] = 1;
                                }else if(permission[j].compareTo("android.permission.VIBRATE") == 0){
                                    perFlag[123] = 1;
                                }else if(permission[j].compareTo("android.permission.WAKE_LOCK") == 0){
                                    perFlag[124] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_APN_SETTINGS") == 0){
                                    perFlag[125] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_CALENDAR") == 0){
                                    perFlag[126] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_CALL_LOG") == 0){
                                    perFlag[127] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_CONTACTS") == 0){
                                    perFlag[128] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_EXTERNAL_STORAGE") == 0){
                                    perFlag[129] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_GSERVICES") == 0){
                                    perFlag[130] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_SECURE_SETTINGS") == 0){
                                    perFlag[131] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_SETTINGS") == 0){
                                    perFlag[132] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_SYNC_SETTINGS") == 0){
                                    perFlag[133] = 1;
                                }else if(permission[j].compareTo("android.permission.WRITE_VOICEMAIL") == 0){
                                    perFlag[134] = 1;
                                }

                                //Log.d("Permission: ",permission[j]);
                            }
                        }
                        //convert perFlag array to arraylist
                        ArrayList<Double> dbPerFlag = new ArrayList<Double>();
                        for(int a = 0; a < DIMENSION;  a++)
                        {
                            dbPerFlag.add((double)perFlag[i]);
                        }
                        //this method returns a boolean
                        if(prediction.isMalicious(dbPerFlag))
                        {
                            malwareCount++;
                            String string = pkgAppsList.get(i).toString();
                            String [] parts = string.split("(?<= com.)");
                            String s = parts[1];
                            String [] name = s.split("(?=/)");
                            possiList[malwareCount-1] = name[0];
                        }
                        //--------------------------------------------------------------------------------------------------------------
                        //remove after
                        try {
                            Thread.sleep(50);
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                        String flag = "";

                        for(int k = 0; k < perFlag.length; k++) {
                           flag += String.valueOf(perFlag[k]);
                        }
                        Log.d("flag: ", flag);

                        //method to change the status bar percent
                        if((pStatus + Math.ceil(100.0/pkgAppsList.size()))<=100 ) {
                            pStatus += Math.ceil(100.0 / pkgAppsList.size());
                        }else{pStatus = 100;}
                        handler.post(new Runnable() {
                            @Override
                            public void run() {
                                progressBar.setProgress(pStatus);
                                txtProgress.setText(pStatus + " %");
                            }
                        });

                        // goto the next activity
                        if(i == (pkgAppsList.size()-1)){
                            //String com = "Complete";
                            //Scan.setText(com);
                            try {
                                Thread.sleep(1000);
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                            Intent third = new Intent("com.example.kevinwu.project.activity_third");
                            third.putExtra("mcount", malwareCount);
                            b.putStringArray("list", possiList);
                            third.putExtras(b);
                            finish();
                            startActivity(third);

                        }
                    }
            }
       }).start();
    }
}
